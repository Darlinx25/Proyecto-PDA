/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package culturarte.graficos;

import culturarte.logica.DTPropuesta;
import culturarte.logica.Estado;
import culturarte.logica.EstadoPropuesta;
import culturarte.logica.IControllerFactory;
import culturarte.logica.IController;
import culturarte.logica.TipoRetorno;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.text.DecimalFormatSymbols;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.NumberFormatter;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author kevin
 */
public class AltaPropuesta extends javax.swing.JInternalFrame {

    private IController controller;
    private String imagenPropuesta;

    public AltaPropuesta() {
        IControllerFactory fabrica = IControllerFactory.getInstance();
        this.controller = fabrica.getIController();
        this.imagenPropuesta = null;

        initComponents();
        NumberFormatter numberFormatter = (NumberFormatter) this.campoPrecioEntrada.getFormatter();
        numberFormatter.setMinimum(0);
        NumberFormatter numberFormatter2 = (NumberFormatter) this.campoMontoReunir.getFormatter();
        numberFormatter2.setMinimum(0);

        DefaultListModel<String> modelo = (DefaultListModel<String>) listaProponentes.getModel();
        modelo.clear();
        for (String nick : controller.listarProponentes()) {
            modelo.addElement(nick);
        }

        // Listener para JList
        listaProponentes.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                String select1 = listaProponentes.getSelectedValue();
                DefaultMutableTreeNode select2 = (DefaultMutableTreeNode) arbolEspectaculo.getLastSelectedPathComponent();

                if (select1 != null && select2 != null) {
                    String cat = select2.toString();
                    if (!cat.equals("Categorías")) {
                        enableDatosPropuesta();
                    } else {
                        disableDatosPropuesta();
                    }
                    
                }
            }
        });

        // Listener para JTree
        arbolEspectaculo.getSelectionModel().addTreeSelectionListener(e -> {
            String select1 = listaProponentes.getSelectedValue();
            DefaultMutableTreeNode select2 = (DefaultMutableTreeNode) arbolEspectaculo.getLastSelectedPathComponent();

            if (select1 != null && select2 != null) {
                String cat = select2.toString();
                    if (!cat.equals("Categorías")) {
                        enableDatosPropuesta();
                    } else {
                        disableDatosPropuesta();
                    }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        botonAceptar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaProponentes = listaProponentes = new javax.swing.JList<>(new javax.swing.DefaultListModel<>());
        Proponentes = new javax.swing.JLabel();
        Tipo_de_Espectaculo = new javax.swing.JLabel();
        botonCancelar = new javax.swing.JButton();
        NombreL = new javax.swing.JLabel();
        DescripcionL = new javax.swing.JLabel();
        botonAddImagen = new javax.swing.JButton();
        LugarL = new javax.swing.JLabel();
        Lugar = new javax.swing.JTextField();
        Fecha_realizarL = new javax.swing.JLabel();
        PrecioEntradaL = new javax.swing.JLabel();
        MontoReunirL = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Descripcion = new javax.swing.JTextArea();
        campoTitulo = new javax.swing.JTextField();
        arbolEspectaculo = new javax.swing.JTree(this.controller.listarCategorias());
        labelRetorno = new javax.swing.JLabel();
        checkEntradaGratis = new javax.swing.JCheckBox();
        checkGanancias = new javax.swing.JCheckBox();
        labelImagen = new javax.swing.JLabel();
        campoFechaRealizar = new javax.swing.JFormattedTextField();
        campoMontoReunir = new javax.swing.JFormattedTextField();
        campoPrecioEntrada = new javax.swing.JFormattedTextField();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Alta de Propuesta");
        setPreferredSize(new java.awt.Dimension(1000, 500));

        botonAceptar.setText("Aceptar");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(listaProponentes);

        Proponentes.setText("Proponentes");

        Tipo_de_Espectaculo.setText("Tipo de Espectaculo");

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        NombreL.setText("Titulo:");
        NombreL.setEnabled(false);

        DescripcionL.setText("Descripcion:");
        DescripcionL.setEnabled(false);

        botonAddImagen.setText("Seleccionar Imagen");
        botonAddImagen.setEnabled(false);
        botonAddImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAddImagenActionPerformed(evt);
            }
        });

        LugarL.setText("Lugar:");
        LugarL.setEnabled(false);

        Lugar.setEnabled(false);
        Lugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LugarActionPerformed(evt);
            }
        });

        Fecha_realizarL.setText("Fecha a Realizar:");
        Fecha_realizarL.setEnabled(false);

        PrecioEntradaL.setText("Precio entrada:");
        PrecioEntradaL.setEnabled(false);

        MontoReunirL.setText("Monto a Reunir:");
        MontoReunirL.setEnabled(false);

        jScrollPane3.setEnabled(false);

        Descripcion.setColumns(20);
        Descripcion.setRows(5);
        Descripcion.setEnabled(false);
        jScrollPane3.setViewportView(Descripcion);

        campoTitulo.setEnabled(false);
        campoTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTituloActionPerformed(evt);
            }
        });

        labelRetorno.setText("Tipo de Retorno:");
        labelRetorno.setEnabled(false);

        checkEntradaGratis.setText("Entrada Gratis");
        checkEntradaGratis.setEnabled(false);

        checkGanancias.setText("Porcentaje de Ganancias");
        checkGanancias.setEnabled(false);

        labelImagen.setPreferredSize(new java.awt.Dimension(64, 64));

        campoFechaRealizar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/y"))));
        campoFechaRealizar.setEnabled(false);
        campoFechaRealizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoFechaRealizarActionPerformed(evt);
            }
        });

        campoMontoReunir.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0.00", new DecimalFormatSymbols(Locale.US)))));
        campoMontoReunir.setEnabled(false);

        campoPrecioEntrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0.00", new DecimalFormatSymbols(Locale.US)))));
        campoPrecioEntrada.setEnabled(false);
        campoPrecioEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoPrecioEntradaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Proponentes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addGap(48, 48, 48)
                        .addComponent(Tipo_de_Espectaculo))
                    .addComponent(arbolEspectaculo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(botonAddImagen)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(checkEntradaGratis, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(checkGanancias, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(labelRetorno)
                                            .addGap(65, 65, 65)))
                                    .addComponent(DescripcionL))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelImagen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(179, 179, 179))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botonCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(botonAceptar)
                        .addGap(174, 174, 174))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(NombreL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PrecioEntradaL)
                                .addGap(15, 15, 15)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                            .addComponent(campoPrecioEntrada))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Fecha_realizarL)
                                    .addComponent(LugarL, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MontoReunirL)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Lugar)
                            .addComponent(campoFechaRealizar, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                            .addComponent(campoMontoReunir))
                        .addGap(112, 112, 112))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Proponentes, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tipo_de_Espectaculo))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(arbolEspectaculo, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(NombreL)
                                            .addComponent(campoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(53, 53, 53))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(LugarL)
                                            .addComponent(Lugar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(Fecha_realizarL)
                                            .addComponent(campoFechaRealizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(MontoReunirL)
                                            .addComponent(campoMontoReunir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(campoPrecioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PrecioEntradaL))))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DescripcionL))
                                .addGap(26, 26, 26)
                                .addComponent(botonAddImagen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelRetorno)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(checkEntradaGratis)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(checkGanancias)))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar)
                    .addComponent(botonCancelar))
                .addGap(107, 107, 107))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        if (sonValidosLosCampos()) {

            String titulo = this.campoTitulo.getText();
            String descripcion = this.Descripcion.getText();
            String lugarRealizara = this.Lugar.getText();
            Date fecha = (Date) this.campoFechaRealizar.getValue();
            LocalDate fechaRealizara = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            Number precioEntrada1 = (Number) this.campoPrecioEntrada.getValue();
            float precioEntrada = precioEntrada1 != null ? precioEntrada1.floatValue() : 0f;//Estas dos lineas son para obtener e lvalor numerio y pasarlo a float, lo que habia antes lo pasaba con coma y no andaba en tiempo de eejecucion

            Number montoAReunir1 = (Number) this.campoMontoReunir.getValue();
            float montoAReunir = montoAReunir1 != null ? montoAReunir1.floatValue() : 0f;
            DefaultMutableTreeNode cat = (DefaultMutableTreeNode) arbolEspectaculo.getLastSelectedPathComponent();
            String tipoPropuesta = cat.toString();
            String nickProponedor = listaProponentes.getSelectedValue();
            ArrayList<TipoRetorno> tiposRetorno = new ArrayList<>();
            EstadoPropuesta estp = EstadoPropuesta.INGRESADA;
            Estado est = new Estado(estp);
            if (this.checkEntradaGratis.isSelected()) {
                tiposRetorno.add(TipoRetorno.ENTRADA_GRATIS);
            }
            if (this.checkGanancias.isSelected()) {
                tiposRetorno.add(TipoRetorno.PORCENTAJE_GANANCIAS);
            }
            DTPropuesta propuesta = new DTPropuesta(titulo, descripcion, this.imagenPropuesta, lugarRealizara, fechaRealizara,
                    precioEntrada, montoAReunir, tipoPropuesta, nickProponedor, tiposRetorno, est);

            this.controller.addPropuesta(propuesta);
            this.dispose();
        }
    }//GEN-LAST:event_botonAceptarActionPerformed

    private boolean sonValidosLosCampos() {
        if (this.campoTitulo.getText().isBlank()) {
            return false;
        }
        if (this.Descripcion.getText().isBlank()) {
            return false;
        }
        if (this.Lugar.getText().isBlank()) {
            return false;
        }
        if (this.campoFechaRealizar.getText().isBlank()) {
            return false;
        }
        if (this.campoPrecioEntrada.getText().isBlank()) {
            return false;
        }
        if (Float.parseFloat(this.campoPrecioEntrada.getText()) <= 0) {
            JOptionPane.showMessageDialog(this, "El precio de la entrada debe ser mayor a 0", "Alta de Propuesta", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (this.campoMontoReunir.getText().isBlank()) {
            return false;
        }
        if (Float.parseFloat(this.campoMontoReunir.getText()) <= 0) {
            JOptionPane.showMessageDialog(this, "El monto a reunir debe ser mayor a 0", "Alta de Propuesta", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (!(this.checkEntradaGratis.isSelected() || this.checkGanancias.isSelected())) {
            JOptionPane.showMessageDialog(this, "Seleccione al menos un tipo de retorno", "Alta de Propuesta", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return this.campoTitulo.isEnabled();
    }

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void botonAddImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAddImagenActionPerformed

       JFileChooser selectorImagen = new JFileChooser();
        String[] tiposImagen = {"jpg", "png"};
        FileNameExtensionFilter filtroImagen = new FileNameExtensionFilter("Archivos .jpg o .png", tiposImagen);
        selectorImagen.setFileFilter(filtroImagen);
        selectorImagen.setAcceptAllFileFilterUsed(false);

        int resultado = selectorImagen.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivoElegido = selectorImagen.getSelectedFile();
            try {
                String extensionImagen = tipoImagen(archivoElegido);

                if (extensionImagen.equals("jpg") || extensionImagen.equals("png")) {
                    BufferedImage temp = ImageIO.read(archivoElegido);

                    File carpetaImagenes = new File("imagenesUsuarios");
                    if (!carpetaImagenes.exists()) {
                        carpetaImagenes.mkdirs();
                    }

                    String nombreArchivo = System.currentTimeMillis() + "." + extensionImagen;
                    File archivoDestino = new File(carpetaImagenes, nombreArchivo);
                    ImageIO.write(temp, extensionImagen, archivoDestino);

                    this.imagenPropuesta = nombreArchivo;

                    Image imagenEscalada = temp.getScaledInstance(133, 133, Image.SCALE_SMOOTH);
                    this.labelImagen.setIcon(new ImageIcon(imagenEscalada));
                }
            } catch (IOException ex) {
                System.getLogger(AltaUsuario.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            }
        }
    }

    private String tipoImagen(File archivo) throws IOException {
        Path path = archivo.toPath();
        String mimeType = Files.probeContentType(path);
        if (mimeType != null) {
            if (mimeType.equals("image/png")) {
                return "png";
            } else if (mimeType.equals("image/jpeg")) {
                return "jpg";
            }
        }
        return "desconocido";
    }//GEN-LAST:event_botonAddImagenActionPerformed

    private void LugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LugarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LugarActionPerformed
    
    
    private void enableDatosPropuesta(){
        this.Descripcion.setEnabled(true);
        this.DescripcionL.setEnabled(true);
        this.campoFechaRealizar.setEnabled(true);
        this.Fecha_realizarL.setEnabled(true);
        this.botonAddImagen.setEnabled(true);
        this.Lugar.setEnabled(true);
        this.LugarL.setEnabled(true);
        this.MontoReunirL.setEnabled(true);
        this.campoTitulo.setEnabled(true);
        this.NombreL.setEnabled(true);
        this.PrecioEntradaL.setEnabled(true);
        this.campoPrecioEntrada.setEnabled(true);
        this.campoMontoReunir.setEnabled(true);
        this.labelRetorno.setEnabled(true);
        this.checkEntradaGratis.setEnabled(true);   
        this.checkGanancias.setEnabled(true);   

    }
    
     private void disableDatosPropuesta(){
        this.Descripcion.setEnabled(false);
        this.DescripcionL.setEnabled(false);
        this.campoFechaRealizar.setEnabled(false);
        this.Fecha_realizarL.setEnabled(false);
        this.botonAddImagen.setEnabled(false);
        this.Lugar.setEnabled(false);
        this.LugarL.setEnabled(false);
        this.MontoReunirL.setEnabled(false);
        this.campoTitulo.setEnabled(false);
        this.NombreL.setEnabled(false);
        this.PrecioEntradaL.setEnabled(false);
        this.campoPrecioEntrada.setEnabled(false);
        this.Descripcion.setEnabled(false);
        this.labelRetorno.setEnabled(false);
        this.checkEntradaGratis.setEnabled(false);   
        this.checkGanancias.setEnabled(false); 
    }
    
    private void campoTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTituloActionPerformed

    private void campoPrecioEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoPrecioEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoPrecioEntradaActionPerformed

    private void campoFechaRealizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoFechaRealizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoFechaRealizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Descripcion;
    private javax.swing.JLabel DescripcionL;
    private javax.swing.JLabel Fecha_realizarL;
    private javax.swing.JTextField Lugar;
    private javax.swing.JLabel LugarL;
    private javax.swing.JLabel MontoReunirL;
    private javax.swing.JLabel NombreL;
    private javax.swing.JLabel PrecioEntradaL;
    private javax.swing.JLabel Proponentes;
    private javax.swing.JLabel Tipo_de_Espectaculo;
    private javax.swing.JTree arbolEspectaculo;
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonAddImagen;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JFormattedTextField campoFechaRealizar;
    private javax.swing.JFormattedTextField campoMontoReunir;
    private javax.swing.JFormattedTextField campoPrecioEntrada;
    private javax.swing.JTextField campoTitulo;
    private javax.swing.JCheckBox checkEntradaGratis;
    private javax.swing.JCheckBox checkGanancias;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelImagen;
    private javax.swing.JLabel labelRetorno;
    private javax.swing.JList<String> listaProponentes;
    // End of variables declaration//GEN-END:variables
}
