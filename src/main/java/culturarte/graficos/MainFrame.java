/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package culturarte.graficos;

import culturarte.excepciones.EmailRepetidoException;
import culturarte.excepciones.NickRepetidoException;
import culturarte.excepciones.PropuestaDuplicadaException;
import culturarte.logica.IController;
import culturarte.logica.IControllerFactory;
import javax.swing.JOptionPane;

/**
 *
 * @author faxcundo
 */
public class MainFrame extends javax.swing.JFrame {

    private AltaUsuario altaUsr;
    private AltaCategoria altaCategoria;
    private AltaPropuesta altaPropuesta;
    private ConsultarColaborador consultarColaborador;
    private ConsultarProponente consultarProp;
    private SeguirUsuario seguirUsuario;
    private RegistrarColaboracion registrarColaboracion;
    private ConsultarPropuestaEstado consultaEstado;
    private DejarDeSeguirUsuario dejarDeSeguirUsuario;
    private ModificarPropuesta modificarPropuesta;
    private ConsultarPropuesta consultarPropuesta;
    private ConsultarColaboracion consultarColaboracion;
    private CancelarColaboracion cancelarColaboracion;

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(MainFrame.class.getName());
    private IController controller;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        this.setTitle("Culturarte");
        IControllerFactory fabrica = IControllerFactory.getInstance();
        this.controller = fabrica.getIController();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuUsuarios = new javax.swing.JMenu();
        itemAltaUsuario = new javax.swing.JMenuItem();
        itemConsultarColaborador = new javax.swing.JMenuItem();
        itemConsultarProponente = new javax.swing.JMenuItem();
        itemSeguirUsuario = new javax.swing.JMenuItem();
        itemDejarSeguirUsuario = new javax.swing.JMenuItem();
        menuPropuestas = new javax.swing.JMenu();
        itemAltaCategoria = new javax.swing.JMenuItem();
        itemAltaPropuesta = new javax.swing.JMenuItem();
        itemRegistrarColaboracion = new javax.swing.JMenuItem();
        itemCancelarColaboracion = new javax.swing.JMenuItem();
        itemModPropuesta = new javax.swing.JMenuItem();
        itemConsultarPropuesta = new javax.swing.JMenuItem();
        itemConsultarColaboracion = new javax.swing.JMenuItem();
        itemConsultPropsPorEstado = new javax.swing.JMenuItem();
        menuSistema = new javax.swing.JMenu();
        itemCargarDatos = new javax.swing.JMenuItem();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(400, 400, 500, 500));
        setLocation(new java.awt.Point(350, 100));
        setResizable(false);

        menuUsuarios.setText("Usuarios");

        itemAltaUsuario.setText("Alta de Usuario");
        itemAltaUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAltaUsuarioActionPerformed(evt);
            }
        });
        menuUsuarios.add(itemAltaUsuario);

        itemConsultarColaborador.setText("Consultar Colaborador");
        itemConsultarColaborador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConsultarColaboradorActionPerformed(evt);
            }
        });
        menuUsuarios.add(itemConsultarColaborador);

        itemConsultarProponente.setText("Consultar Proponente");
        itemConsultarProponente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConsultarProponenteActionPerformed(evt);
            }
        });
        menuUsuarios.add(itemConsultarProponente);

        itemSeguirUsuario.setText("Seguir Usuario");
        itemSeguirUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSeguirUsuarioActionPerformed(evt);
            }
        });
        menuUsuarios.add(itemSeguirUsuario);

        itemDejarSeguirUsuario.setText("Dejar de Seguir Usuario");
        itemDejarSeguirUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemDejarSeguirUsuarioActionPerformed(evt);
            }
        });
        menuUsuarios.add(itemDejarSeguirUsuario);

        jMenuBar1.add(menuUsuarios);

        menuPropuestas.setText("Propuestas");

        itemAltaCategoria.setText("Alta de Categoría");
        itemAltaCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAltaCategoriaActionPerformed(evt);
            }
        });
        menuPropuestas.add(itemAltaCategoria);

        itemAltaPropuesta.setText("Alta de Propuesta");
        itemAltaPropuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAltaPropuestaActionPerformed(evt);
            }
        });
        menuPropuestas.add(itemAltaPropuesta);

        itemRegistrarColaboracion.setText("Registrar Colaboración");
        itemRegistrarColaboracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemRegistrarColaboracionActionPerformed(evt);
            }
        });
        menuPropuestas.add(itemRegistrarColaboracion);

        itemCancelarColaboracion.setText("Cancelar Colaboración");
        itemCancelarColaboracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCancelarColaboracionActionPerformed(evt);
            }
        });
        menuPropuestas.add(itemCancelarColaboracion);

        itemModPropuesta.setText("Modificar Propuesta");
        itemModPropuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemModPropuestaActionPerformed(evt);
            }
        });
        menuPropuestas.add(itemModPropuesta);

        itemConsultarPropuesta.setText("Consulta de Propuesta");
        itemConsultarPropuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConsultarPropuestaActionPerformed(evt);
            }
        });
        menuPropuestas.add(itemConsultarPropuesta);

        itemConsultarColaboracion.setText("Consultar Colaboración");
        itemConsultarColaboracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConsultarColaboracionActionPerformed(evt);
            }
        });
        menuPropuestas.add(itemConsultarColaboracion);

        itemConsultPropsPorEstado.setText("Consulta Propuesta por Estado");
        itemConsultPropsPorEstado.setActionCommand("jMenu8");
        itemConsultPropsPorEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConsultPropsPorEstadoActionPerformed(evt);
            }
        });
        menuPropuestas.add(itemConsultPropsPorEstado);

        jMenuBar1.add(menuPropuestas);

        menuSistema.setText("Sistema");

        itemCargarDatos.setText("Cargar datos prueba");
        itemCargarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCargarDatosActionPerformed(evt);
            }
        });
        menuSistema.add(itemCargarDatos);

        jMenuBar1.add(menuSistema);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1100, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 727, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemAltaUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAltaUsuarioActionPerformed
        if (this.altaUsr != null && this.altaUsr.isVisible()) {
            return;
        }
        this.altaUsr = new AltaUsuario();
        add(this.altaUsr);
        this.altaUsr.setVisible(true);
    }//GEN-LAST:event_itemAltaUsuarioActionPerformed

    private void itemAltaCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAltaCategoriaActionPerformed
        if (this.altaCategoria != null && this.altaCategoria.isVisible()) {
            return;
        }
        this.altaCategoria = new AltaCategoria();
        add(this.altaCategoria);
        this.altaCategoria.setVisible(true);
    }//GEN-LAST:event_itemAltaCategoriaActionPerformed

    private void itemAltaPropuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAltaPropuestaActionPerformed
        if (this.altaPropuesta != null && this.altaPropuesta.isVisible()) {
            return;
        }
        this.altaPropuesta = new AltaPropuesta();
        add(this.altaPropuesta);
        this.altaPropuesta.setVisible(true);
    }//GEN-LAST:event_itemAltaPropuestaActionPerformed

    private void itemConsultarProponenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConsultarProponenteActionPerformed
        if (this.consultarProp != null && this.consultarProp.isVisible()) {
            return;
        }
        this.consultarProp = new ConsultarProponente();
        add(this.consultarProp);
        this.consultarProp.setVisible(true);
    }//GEN-LAST:event_itemConsultarProponenteActionPerformed

    private void itemConsultarColaboradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConsultarColaboradorActionPerformed
        if (this.consultarColaborador != null && this.consultarColaborador.isVisible()) {
            return;
        }
        this.consultarColaborador = new ConsultarColaborador();
        add(this.consultarColaborador);
        this.consultarColaborador.setVisible(true);
    }//GEN-LAST:event_itemConsultarColaboradorActionPerformed

    private void itemSeguirUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSeguirUsuarioActionPerformed
        if (this.seguirUsuario != null && this.seguirUsuario.isVisible()) {
            return;
        }
        this.seguirUsuario = new SeguirUsuario();
        add(this.seguirUsuario);
        this.seguirUsuario.setVisible(true);
    }//GEN-LAST:event_itemSeguirUsuarioActionPerformed

    private void itemRegistrarColaboracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemRegistrarColaboracionActionPerformed
        if (this.registrarColaboracion != null && this.registrarColaboracion.isVisible()) {
            return;
        }
        this.registrarColaboracion = new RegistrarColaboracion();
        add(this.registrarColaboracion);
        this.registrarColaboracion.setVisible(true);
    }//GEN-LAST:event_itemRegistrarColaboracionActionPerformed

    private void itemConsultPropsPorEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConsultPropsPorEstadoActionPerformed
        if (this.consultaEstado != null && this.consultaEstado.isVisible()) {
            return;
        }
        this.consultaEstado = new ConsultarPropuestaEstado();
        add(this.consultaEstado);
        this.consultaEstado.setVisible(true);
    }//GEN-LAST:event_itemConsultPropsPorEstadoActionPerformed

    private void itemDejarSeguirUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemDejarSeguirUsuarioActionPerformed
        if (this.dejarDeSeguirUsuario != null && this.dejarDeSeguirUsuario.isVisible()) {
            return;
        }
        this.dejarDeSeguirUsuario = new DejarDeSeguirUsuario();
        add(this.dejarDeSeguirUsuario);
        this.dejarDeSeguirUsuario.setVisible(true);
    }//GEN-LAST:event_itemDejarSeguirUsuarioActionPerformed

    private void itemModPropuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemModPropuestaActionPerformed
        if (this.modificarPropuesta != null && this.modificarPropuesta.isVisible()) {
            return;
        }
        this.modificarPropuesta = new ModificarPropuesta();
        add(this.modificarPropuesta);
        this.modificarPropuesta.setVisible(true);
    }//GEN-LAST:event_itemModPropuestaActionPerformed

    private void itemConsultarPropuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConsultarPropuestaActionPerformed
        if (this.consultarPropuesta != null && this.consultarPropuesta.isVisible()) {
            return;
        }
        this.consultarPropuesta = new ConsultarPropuesta();
        add(this.consultarPropuesta);
        this.consultarPropuesta.setVisible(true);
    }//GEN-LAST:event_itemConsultarPropuestaActionPerformed

    private void itemConsultarColaboracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConsultarColaboracionActionPerformed
        if (this.consultarColaboracion != null && this.consultarColaboracion.isVisible()) {
            return;
        }
        this.consultarColaboracion = new ConsultarColaboracion();
        add(this.consultarColaboracion);
        this.consultarColaboracion.setVisible(true);
    }//GEN-LAST:event_itemConsultarColaboracionActionPerformed

    private void itemCancelarColaboracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCancelarColaboracionActionPerformed
        if (this.cancelarColaboracion != null && this.cancelarColaboracion.isVisible()) {
            return;
        }
        this.cancelarColaboracion = new CancelarColaboracion();
        add(this.cancelarColaboracion);
        this.cancelarColaboracion.setVisible(true);
    }//GEN-LAST:event_itemCancelarColaboracionActionPerformed

    private void itemCargarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCargarDatosActionPerformed
        try {
            controller.cargarDatosPrueba();
            JOptionPane.showMessageDialog(this, "Datos de prueba cargados correctamente.",
                    "Información", JOptionPane.INFORMATION_MESSAGE);
        } catch (NickRepetidoException | EmailRepetidoException | PropuestaDuplicadaException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar datos de prueba: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_itemCargarDatosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new MainFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itemAltaCategoria;
    private javax.swing.JMenuItem itemAltaPropuesta;
    private javax.swing.JMenuItem itemAltaUsuario;
    private javax.swing.JMenuItem itemCancelarColaboracion;
    private javax.swing.JMenuItem itemCargarDatos;
    private javax.swing.JMenuItem itemConsultPropsPorEstado;
    private javax.swing.JMenuItem itemConsultarColaboracion;
    private javax.swing.JMenuItem itemConsultarColaborador;
    private javax.swing.JMenuItem itemConsultarProponente;
    private javax.swing.JMenuItem itemConsultarPropuesta;
    private javax.swing.JMenuItem itemDejarSeguirUsuario;
    private javax.swing.JMenuItem itemModPropuesta;
    private javax.swing.JMenuItem itemRegistrarColaboracion;
    private javax.swing.JMenuItem itemSeguirUsuario;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu menuPropuestas;
    private javax.swing.JMenu menuSistema;
    private javax.swing.JMenu menuUsuarios;
    // End of variables declaration//GEN-END:variables
}
